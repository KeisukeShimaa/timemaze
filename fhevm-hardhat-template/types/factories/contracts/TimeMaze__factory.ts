/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { TimeMaze, TimeMazeInterface } from "../../contracts/TimeMaze";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721IncorrectOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721InsufficientApproval",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC721InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "ERC721InvalidOperator",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721InvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC721InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC721InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721NonexistentToken",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_fromTokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_toTokenId",
        type: "uint256",
      },
    ],
    name: "BatchMetadataUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "MetadataUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "player",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "uri",
        type: "string",
      },
    ],
    name: "ProofMinted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "player",
        type: "address",
      },
      {
        indexed: false,
        internalType: "externalEuint64",
        name: "inputHandle",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "timestamp",
        type: "uint64",
      },
    ],
    name: "ResultSubmitted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "player",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "clientTimestamp",
        type: "uint64",
      },
    ],
    name: "RunStarted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "player",
        type: "address",
      },
    ],
    name: "getBestTime",
    outputs: [
      {
        internalType: "euint64",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "offset",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "limit",
        type: "uint256",
      },
    ],
    name: "getPlayers",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "uri",
        type: "string",
      },
    ],
    name: "mintProof",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "playersCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "protocolId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "clientTimestamp",
        type: "uint64",
      },
    ],
    name: "startRun",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "externalEuint64",
        name: "timeExt",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "inputProof",
        type: "bytes",
      },
    ],
    name: "submitResult",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenCounter",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561000f575f5ffd5b506040518060400160405280600e81526020016d2a34b6b2a6b0bd3290283937b7b360911b815250604051806040016040528060048152602001630544d5a560e41b81525061014161006561016160201b60201c565b80517f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e464970080546001600160a01b03199081166001600160a01b039384161790915560208301517f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e46497018054831691841691909117905560408301517f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e46497028054831691841691909117905560608301517f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e46497038054909216921691909117905550565b5f61014c8382610291565b5060016101598282610291565b50505061034b565b604080516080810182525f808252602082018190529181018290526060810191909152506040805160808101825273687820221192c5b662b25367f70076a37bc79b6c815273848b0066793bcc60346da1f49049357399b8d595602082015273a02cda4ca3a71d7c46997716f4283aa851c2881291810191909152731364cbbf2cdf5032c47d8226a6f6fbd2afcdacac606082015290565b634e487b7160e01b5f52604160045260245ffd5b600181811c9082168061022157607f821691505b60208210810361023f57634e487b7160e01b5f52602260045260245ffd5b50919050565b601f82111561028c57805f5260205f20601f840160051c8101602085101561026a5750805b601f840160051c820191505b81811015610289575f8155600101610276565b50505b505050565b81516001600160401b038111156102aa576102aa6101f9565b6102be816102b8845461020d565b84610245565b6020601f8211600181146102f0575f83156102d95750848201515b5f19600385901b1c1916600184901b178455610289565b5f84815260208120601f198516915b8281101561031f57878501518255602094850194600190920191016102ff565b508482101561033c57868401515f19600387901b60f8161c191681555b50505050600190811b01905550565b611d4d806103585f395ff3fe608060405234801561000f575f5ffd5b506004361061016e575f3560e01c80636352211e116100d2578063a3f67d6d11610088578063d082e38111610063578063d082e381146102fe578063da1f12ab14610307578063e985e9c51461030f575f5ffd5b8063a3f67d6d146102d0578063b88d4fde146102d8578063c87b56dd146102eb575f5ffd5b80638bc19349116100b85780638bc19349146102a257806395d89b41146102b5578063a22cb465146102bd575f5ffd5b80636352211e1461027c57806370a082311461028f575f5ffd5b806323b872dd116101275780632fc8235b1161010d5780632fc8235b146102435780633c06b7351461025657806342842e0e14610269575f5ffd5b806323b872dd1461020f5780632e5094b114610222575f5ffd5b8063081812fc11610157578063081812fc146101af578063095ea7b3146101da5780630d2dce22146101ef575f5ffd5b806301ffc9a71461017257806306fdde031461019a575b5f5ffd5b6101856101803660046116db565b61034a565b60405190151581526020015b60405180910390f35b6101a2610374565b6040516101919190611724565b6101c26101bd366004611736565b610403565b6040516001600160a01b039091168152602001610191565b6101ed6101e8366004611768565b61042a565b005b6102026101fd366004611790565b610439565b60405161019191906117b0565b6101ed61021d3660046117fb565b610545565b610235610230366004611835565b6105d3565b604051908152602001610191565b6101ed61025136600461184e565b610644565b6101ed610264366004611875565b610686565b6101ed6102773660046117fb565b6107f9565b6101c261028a366004611736565b610818565b61023561029d366004611835565b610822565b6101ed6102b0366004611977565b610867565b6101a261099a565b6101ed6102cb3660046119bc565b6109a9565b600854610235565b6101ed6102e63660046119f5565b6109b4565b6101a26102f9366004611736565b6109cc565b61023560095481565b612711610235565b61018561031d366004611a6c565b6001600160a01b039182165f90815260056020908152604080832093909416825291909152205460ff1690565b5f6001600160e01b03198216632483248360e11b148061036e575061036e82610ad7565b92915050565b60605f805461038290611a9d565b80601f01602080910402602001604051908101604052809291908181526020018280546103ae90611a9d565b80156103f95780601f106103d0576101008083540402835291602001916103f9565b820191905f5260205f20905b8154815290600101906020018083116103dc57829003601f168201915b5050505050905090565b5f61040d82610b26565b505f828152600460205260409020546001600160a01b031661036e565b610435828233610b5e565b5050565b6008546060908084111561045c575050604080515f81526020810190915261036e565b5f6104678486611ae9565b9050818111156104745750805b5f61047f8683611afc565b90505f8167ffffffffffffffff81111561049b5761049b6118ec565b6040519080825280602002602001820160405280156104c4578160200160208202803683370190505b5090505f5b8281101561053a5760086104dd828a611ae9565b815481106104ed576104ed611b0f565b905f5260205f20015f9054906101000a90046001600160a01b031682828151811061051a5761051a611b0f565b6001600160a01b03909216602092830291909101909101526001016104c9565b509695505050505050565b6001600160a01b03821661057357604051633250574960e11b81525f60048201526024015b60405180910390fd5b5f61057f838333610b6b565b9050836001600160a01b0316816001600160a01b0316146105cd576040516364283d7b60e01b81526001600160a01b038086166004830152602482018490528216604482015260640161056a565b50505050565b6001600160a01b0381165f9081526007602052604081206001015460ff166106295760405162461bcd60e51b8152602060048201526009602482015268139bc81c9958dbdc9960ba1b604482015260640161056a565b506001600160a01b03165f9081526007602052604090205490565b60405167ffffffffffffffff8216815233907fc4b203b586c24f24acdbe91906028ed56d021312d3690a5124ddd41c041ce41f9060200160405180910390a250565b5f6106c68484848080601f0160208091040260200160405190810160405280939291908181526020018383808284375f92019190915250610c6c92505050565b335f9081526007602052604090206001015490915060ff1661075457335f8181526007602052604081206001818101805460ff191682179055908490556008805491820181559091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee301805473ffffffffffffffffffffffffffffffffffffffff1916909117905561077d565b335f9081526007602052604090205461076d9082610c79565b335f908152600760205260409020555b335f9081526007602052604090205461079590610ca7565b50335f818152600760205260409020546107ae91610cb6565b506040805185815267ffffffffffffffff4216602082015233917fd89eaaea126dcc7dac4015d2c3256a3db7a8715d329d0b7295c9fe714b7369c3910160405180910390a250505050565b61081383838360405180602001604052805f8152506109b4565b505050565b5f61036e82610b26565b5f6001600160a01b03821661084c576040516322718ad960e21b81525f600482015260240161056a565b506001600160a01b03165f9081526003602052604090205490565b335f9081526007602052604090206001015460ff166108b45760405162461bcd60e51b8152602060048201526009602482015268139bc81c9958dbdc9960ba1b604482015260640161056a565b335f908152600a602052604090205460ff16156109135760405162461bcd60e51b815260206004820152600e60248201527f416c7265616479206d696e746564000000000000000000000000000000000000604482015260640161056a565b60098054905f61092283611b23565b919050555061093333600954610cc8565b61093f60095482610ce1565b335f818152600a602052604090819020805460ff1916600117905560095490519091907fa0ad330b97ae71fa370052f42a00dd4e8450a1615063483d16c31519be3dfb039061098f908590611724565b60405180910390a350565b60606001805461038290611a9d565b610435338383610d30565b6109bf848484610545565b6105cd3385858585610dce565b60606109d782610b26565b505f82815260066020526040812080546109f090611a9d565b80601f0160208091040260200160405190810160405280929190818152602001828054610a1c90611a9d565b8015610a675780601f10610a3e57610100808354040283529160200191610a67565b820191905f5260205f20905b815481529060010190602001808311610a4a57829003601f168201915b505050505090505f610a8360408051602081019091525f815290565b905080515f03610a94575092915050565b815115610ac6578082604051602001610aae929190611b52565b60405160208183030381529060405292505050919050565b610acf84610ef6565b949350505050565b5f6001600160e01b031982166380ac58cd60e01b1480610b0757506001600160e01b03198216635b5e139f60e01b145b8061036e57506301ffc9a760e01b6001600160e01b031983161461036e565b5f818152600260205260408120546001600160a01b03168061036e57604051637e27328960e01b81526004810184905260240161056a565b6108138383836001610f66565b5f828152600260205260408120546001600160a01b0390811690831615610b9757610b97818486611095565b6001600160a01b03811615610bd157610bb25f855f5f610f66565b6001600160a01b0381165f90815260036020526040902080545f190190555b6001600160a01b03851615610bff576001600160a01b0385165f908152600360205260409020805460010190555b5f84815260026020526040808220805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0389811691821790925591518793918516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a490505b9392505050565b5f610c65838360056110f9565b5f82610c8b57610c885f611219565b92505b81610c9c57610c995f611219565b91505b610c6583835f61122f565b5f610cb2823061130f565b5090565b5f610cc1838361130f565b5090919050565b610435828260405180602001604052805f815250611398565b5f828152600660205260409020610cf88282611baa565b506040518281527ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce79060200160405180910390a15050565b6001600160a01b038216610d6257604051630b61174360e31b81526001600160a01b038316600482015260240161056a565b6001600160a01b038381165f81815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b0383163b15610eef57604051630a85bd0160e11b81526001600160a01b0384169063150b7a0290610e10908890889087908790600401611c65565b6020604051808303815f875af1925050508015610e4a575060408051601f3d908101601f19168201909252610e4791810190611c9b565b60015b610eb1573d808015610e77576040519150601f19603f3d011682016040523d82523d5f602084013e610e7c565b606091505b5080515f03610ea957604051633250574960e11b81526001600160a01b038516600482015260240161056a565b805160208201fd5b6001600160e01b03198116630a85bd0160e11b14610eed57604051633250574960e11b81526001600160a01b038516600482015260240161056a565b505b5050505050565b6060610f0182610b26565b505f610f1760408051602081019091525f815290565b90505f815111610f355760405180602001604052805f815250610c65565b80610f3f846113af565b604051602001610f50929190611b52565b6040516020818303038152906040529392505050565b8080610f7a57506001600160a01b03821615155b15611059575f610f8984610b26565b90506001600160a01b03831615801590610fb55750826001600160a01b0316816001600160a01b031614155b8015610fe657506001600160a01b038082165f9081526005602090815260408083209387168352929052205460ff16155b1561100f5760405163a9fbf51f60e01b81526001600160a01b038416600482015260240161056a565b81156110575783856001600160a01b0316826001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b50505f908152600460205260409020805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b6110a083838361144c565b610813576001600160a01b0383166110ce57604051637e27328960e01b81526004810182905260240161056a565b60405163177e802f60e01b81526001600160a01b03831660048201526024810182905260440161056a565b7f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e46497015460405163196d0b9b60e01b81525f917f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e4649700916001600160a01b039091169063196d0b9b90611172908890339089908990600401611cd6565b6020604051808303815f875af115801561118e573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906111b29190611d15565b8154604051630f8e573b60e21b8152600481018390523360248201529193506001600160a01b031690633e395cec906044015f604051808303815f87803b1580156111fb575f5ffd5b505af115801561120d573d5f5f3e3d5ffd5b50505050509392505050565b5f61036e8267ffffffffffffffff1660056114cc565b5f5f82156112425750600160f81b611245565b505f5b5f7f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e464970060018101546040516304559f7160e01b815260048101899052602481018890527fff00000000000000000000000000000000000000000000000000000000000000851660448201529192506001600160a01b0316906304559f71906064016020604051808303815f875af11580156112e1573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906113059190611d15565b9695505050505050565b5f7f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e46497008054604051635ca4b5b160e11b8152600481018690526001600160a01b03858116602483015292935091169063b9496b62906044015f604051808303815f87803b15801561137d575f5ffd5b505af115801561138f573d5f5f3e3d5ffd5b50505050505050565b6113a28383611581565b610813335f858585610dce565b60605f6113bb836115e2565b60010190505f8167ffffffffffffffff8111156113da576113da6118ec565b6040519080825280601f01601f191660200182016040528015611404576020820181803683370190505b5090508181016020015b5f19017f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a850494508461140e57509392505050565b5f6001600160a01b03831615801590610acf5750826001600160a01b0316846001600160a01b031614806114a457506001600160a01b038085165f9081526005602090815260408083209387168352929052205460ff165b80610acf5750505f908152600460205260409020546001600160a01b03908116911614919050565b7f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e464970154604051639cd07acb60e01b81525f917f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e4649700916001600160a01b0390911690639cd07acb906115419087908790600401611d2c565b6020604051808303815f875af115801561155d573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610acf9190611d15565b6001600160a01b0382166115aa57604051633250574960e11b81525f600482015260240161056a565b5f6115b683835f610b6b565b90506001600160a01b03811615610813576040516339e3563760e11b81525f600482015260240161056a565b5f807a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000831061162a577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000830492506040015b6d04ee2d6d415b85acef81000000008310611656576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc10000831061167457662386f26fc10000830492506010015b6305f5e100831061168c576305f5e100830492506008015b61271083106116a057612710830492506004015b606483106116b2576064830492506002015b600a831061036e5760010192915050565b6001600160e01b0319811681146116d8575f5ffd5b50565b5f602082840312156116eb575f5ffd5b8135610c65816116c3565b5f81518084528060208401602086015e5f602082860101526020601f19601f83011685010191505092915050565b602081525f610c6560208301846116f6565b5f60208284031215611746575f5ffd5b5035919050565b80356001600160a01b0381168114611763575f5ffd5b919050565b5f5f60408385031215611779575f5ffd5b6117828361174d565b946020939093013593505050565b5f5f604083850312156117a1575f5ffd5b50508035926020909101359150565b602080825282518282018190525f918401906040840190835b818110156117f05783516001600160a01b03168352602093840193909201916001016117c9565b509095945050505050565b5f5f5f6060848603121561180d575f5ffd5b6118168461174d565b92506118246020850161174d565b929592945050506040919091013590565b5f60208284031215611845575f5ffd5b610c658261174d565b5f6020828403121561185e575f5ffd5b813567ffffffffffffffff81168114610c65575f5ffd5b5f5f5f60408486031215611887575f5ffd5b83359250602084013567ffffffffffffffff8111156118a4575f5ffd5b8401601f810186136118b4575f5ffd5b803567ffffffffffffffff8111156118ca575f5ffd5b8660208284010111156118db575f5ffd5b939660209190910195509293505050565b634e487b7160e01b5f52604160045260245ffd5b5f5f67ffffffffffffffff84111561191a5761191a6118ec565b50604051601f19601f85018116603f0116810181811067ffffffffffffffff82111715611949576119496118ec565b604052838152905080828401851015611960575f5ffd5b838360208301375f60208583010152509392505050565b5f60208284031215611987575f5ffd5b813567ffffffffffffffff81111561199d575f5ffd5b8201601f810184136119ad575f5ffd5b610acf84823560208401611900565b5f5f604083850312156119cd575f5ffd5b6119d68361174d565b9150602083013580151581146119ea575f5ffd5b809150509250929050565b5f5f5f5f60808587031215611a08575f5ffd5b611a118561174d565b9350611a1f6020860161174d565b925060408501359150606085013567ffffffffffffffff811115611a41575f5ffd5b8501601f81018713611a51575f5ffd5b611a6087823560208401611900565b91505092959194509250565b5f5f60408385031215611a7d575f5ffd5b611a868361174d565b9150611a946020840161174d565b90509250929050565b600181811c90821680611ab157607f821691505b602082108103611acf57634e487b7160e01b5f52602260045260245ffd5b50919050565b634e487b7160e01b5f52601160045260245ffd5b8082018082111561036e5761036e611ad5565b8181038181111561036e5761036e611ad5565b634e487b7160e01b5f52603260045260245ffd5b5f60018201611b3457611b34611ad5565b5060010190565b5f81518060208401855e5f93019283525090919050565b5f610acf611b608386611b3b565b84611b3b565b601f82111561081357805f5260205f20601f840160051c81016020851015611b8b5750805b601f840160051c820191505b81811015610eef575f8155600101611b97565b815167ffffffffffffffff811115611bc457611bc46118ec565b611bd881611bd28454611a9d565b84611b66565b6020601f821160018114611c0a575f8315611bf35750848201515b5f19600385901b1c1916600184901b178455610eef565b5f84815260208120601f198516915b82811015611c395787850151825560209485019460019092019101611c19565b5084821015611c5657868401515f19600387901b60f8161c191681555b50505050600190811b01905550565b6001600160a01b03851681526001600160a01b0384166020820152826040820152608060608201525f61130560808301846116f6565b5f60208284031215611cab575f5ffd5b8151610c65816116c3565b60548110611cd257634e487b7160e01b5f52602160045260245ffd5b9052565b8481526001600160a01b0384166020820152608060408201525f611cfd60808301856116f6565b9050611d0c6060830184611cb6565b95945050505050565b5f60208284031215611d25575f5ffd5b5051919050565b82815260408101610c656020830184611cb656fea164736f6c634300081b000a";

type TimeMazeConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TimeMazeConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TimeMaze__factory extends ContractFactory {
  constructor(...args: TimeMazeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      TimeMaze & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): TimeMaze__factory {
    return super.connect(runner) as TimeMaze__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TimeMazeInterface {
    return new Interface(_abi) as TimeMazeInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): TimeMaze {
    return new Contract(address, _abi, runner) as unknown as TimeMaze;
  }
}
